buildscript {
	repositories {
		gradlePluginPortal()
	}
	dependencies {
		classpath 'com.github.johnrengelman:shadow:8.1.1'
	}
}

plugins {
	id 'com.github.johnrengelman.shadow' version '8.1.1'
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
}

apply plugin: 'com.github.johnrengelman.shadow'

group = 'coop.stmla.tech'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

jar {
	manifest {
		attributes(
				'Main-Class': 'coop.stlma.tech.resume.ResumeApplication'
		)
	}
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
}

dependencies {
	//boot
	implementation 'org.springframework.boot:spring-boot-starter'

	implementation 'org.springframework.boot:spring-boot-starter-web'

	//Database
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.flywaydb:flyway-core'
	runtimeOnly 'org.postgresql:postgresql'

	//Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//cloud
	implementation 'org.springframework.cloud:spring-cloud-gcp-starter-sql-postgresql'

	//Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.testcontainers:junit-jupiter'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
